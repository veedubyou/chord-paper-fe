name: Docker Image CI

on:
  push:
    branches:
      - master

env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: us-west1-a
  GKE_CLUSTER: cluster-1
  
    
jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      # Checkout with history (to get git describe output properly)
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Run script, updates the GIT-VERSION-FILE with version number
      - name: Update GIT-VERSION-FILE
        run: bash git-version.sh
      - name: Get version tag from GIT-VERSION-FILE
        run: echo "::set-env name=gitver::$(cat GIT-VERSION-FILE)"
      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Build image w/version
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/chord:${{ env.gitver }}
      - name: Build image latest
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/chord:latest
      - name: Push image w/version
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/chord:${{ env.gitver }}
      - name: Push image latest
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/chord:latest
      - name: Get Current Timestamp
        run: echo "::set-env name=date::$(date +%s)"

      - name: Deploy K8S to Private Server
        uses: satak/webrequest-action@master
        with:
          url: ${{ secrets.K8S_URL }}/apis/apps/v1/namespaces/default/deployments/chord-fe
          method: PATCH
          payload: '[{"op": "replace", "path": "/spec/template/metadata/annotations/restartedAt", "value":"${{ env.date }}"}]'
          headers: '{"Authorization": "Bearer ${{ secrets.K8S_TOKEN }}", "Content-Type": "application/json-patch+json", "Accept": "application/json"}'

      - name: Setup GCloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
          kubectl rollout restart deploy/chord-fe
          kubectl rollout status deploy/chord-fe
          kubectl get services -o wide

      
